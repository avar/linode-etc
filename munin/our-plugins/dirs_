#!/usr/bin/env perl
use perl5i::latest;
use Munin::Plugin;
use File::Slurp qw(slurp);
use File::Spec::Functions qw(catfile);
use File::Basename qw(basename);

my $statedir  = $ENV{MUNIN_PLUGSTATE};
my $statefile = $0; $statefile =~ s[^.*/][];
my $cache = catfile($statedir, $statefile . '-cache');

my $dirs = $ENV{dirs};
my $basename = $ENV{basename};
my @dirs = parse_du_sk($cache);

given ($ARGV[0]) {
    when ("config") {
        print <<END;
graph_title $dirs usage (in MB)
graph_args --base 1024 -l 1
graph_vlabel MBytes
graph_category disk
graph_info Shows the size of $dirs directories
END
        for my $dir (@dirs) {
            my ($size, $name) = @$dir;
            my $label = $basename ? basename($name) : $name;
            my $fieldname = clean_fieldname($name);
            print <<END;
$fieldname.label $label
$fieldname.info The size of $name
END
        }
    }
    default {
        for my $dir (@dirs) {
            my ($size, $name) = @$dir;
            my $fieldname = clean_fieldname($name);
            print <<END;
$fieldname.value $size
END
        }
    }
}

sub parse_du_sk
{
    my ($file) = @_;

    my $cont = slurp($file);

    my @dirs;
    while ($cont =~ /^ (?<size>\d+) \s+ (?<directory>.*) $/mgx) {
        push @dirs => [ $+{size} * 1024 => $+{directory} ];
    }

    # Sort by size
    @dirs = sort { $b->[0] <=> $a->[0] } @dirs;

    @dirs;
}
