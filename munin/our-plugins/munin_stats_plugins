#!/home/v-perlbrew/perl5/perlbrew/bin/perl
use lib '/usr/share/perl5';
use perl5i::latest;
use Munin::Plugin;
use File::Slurp qw(slurp);
use File::Spec::Functions qw(catfile);

my $statedir  = $ENV{MUNIN_PLUGSTATE};
my $statefile = $0; $statefile =~ s[^.*/][];
my $cache = catfile($statedir, $statefile . '-cache');

my @plugins = parse_plugin_time($cache);

given ($ARGV[0]) {
    when ("config") {
        print <<END;
graph_title Munin plugin processing time
graph_scale yes
graph_vlabel seconds
graph_category munin
graph_info Shows the processing time of munin plugins in seconds
END
        for my $plugin (@plugins) {
            my ($time, $name) = @$plugin;
            my $fieldname = clean_fieldname($name);
            print <<END;
$fieldname.label $name
$fieldname.info The processing time of $name
$fieldname.draw AREASTACK
END
        }
    }
    default {
        for my $plugin (@plugins) {
            my ($time, $name) = @$plugin;
            my $fieldname = clean_fieldname($name);
            print <<END;
$fieldname.value $time
END
        }
    }
}

sub parse_plugin_time
{
    my ($file) = @_;

    my $cont = slurp($file);

    my @plugins;
    while ($cont =~ /^ (?<time>[\d.]+) \s+ (?<plugin>.*) $/mgx) {
        push @plugins => [ $+{time} => $+{plugin} ];
    }

    # Sort by size
    @plugins = sort { $b->[0] <=> $a->[0] } @plugins;

    @plugins;
}
