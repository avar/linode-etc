#!/usr/bin/env perl
use 5.010;
use autodie qw[:all];
use strict;
use FindBin qw[$Bin];
use File::Path qw[remove_tree make_path];

remove_tree("$Bin/gen");

# All enabled sites in apache
chomp(my @ServerName = qx[ ack -h --follow 'ServerName\\s+(\\S+)' --output '\$1' /etc/apache2/sites-enabled/ | sort ]);

# All enabled aliases in apache
chomp(my @ServerAlias = qx[ ack -h --follow 'ServerAlias\\s+(.*)' --output '\$1'  /etc/apache2/sites-enabled/ | sort ]);
# Some have multiple aliases
@ServerAlias = map { split /\s+/, $_ } @ServerAlias;

# All enabled sites
my %sites_enabled;
@sites_enabled{@ServerName, @ServerAlias} = ();

my $TEMPLATE = <<"TEMPLATE";
#!$^X
# DO NOT EDIT, AUTOGENERATED
use FindBin qw[\$Bin];
use lib qq[\$Bin/../../lib];
use WebTest;
TEMPLATE

{
my @tests = (
    'awstats.nix.is'        => qr/Awstats/,
    'blog.nix.is'           => qr/literal thoughts/,
    'ci.nix.is'             => qr/Powered by phpBB/,
    'downlode.org'          => qr/downlode/,
    'git.nix.is'            => qr/GitHub/,
    'hailo.nix.is'          => qr/Hailo Chat/,
    'hailo.org'             => qr/Hailo is a a pluggable/,
    'leech.nix.is'          => qr/wTorrent/,
    'lists.nix.is'          => qr/Mailman/,
    'munin.nix.is'          => qr/Munin/,
    'nix.is'                => qr/logo\.png/,
    'noc.nix.is'            => qr/Network operations/,
    'osm.nix.is'            => qr/Garmin map of Iceland/,
    'tumi.nix.is'           => qr/Tumi/,
    'v.nix.is'              => qr/vee nix/,
    'vnstat.nix.is'         => qr/vnstat\.cgi/,
    'voodootronix.com'      => qr/voodootronix/,
    'xn--var-xla.net'       => qr/Bjarmason/,
    'velfag.is'             => qr/MediaWiki/,
    'www.velfag.is'         => qr/MediaWiki/,
    'xn--vlfag-bsa.is.'     => qr/MediaWiki/,
    'www.xn--vlfag-bsa.is.' => qr/MediaWiki/,
);

while (my ($domain, $content_like) = splice @tests, 0, 2) {
    delete $sites_enabled{$domain};
    my $test = <<TEST;
$TEMPLATE
WebTest->new(
    domain       => q[$domain],
    content_like => qr[$content_like],
)->run_tests;
TEST
    my $dir = "$Bin/gen/content-like";
    make_path($dir);
    open my $th, ">", "$dir/$domain.t";
    print $th $test;
    close $th;
}

for my $domain (sort keys %sites_enabled) {
    my $test = <<TEST;
$TEMPLATE
WebTest->new(
    domain       => q[$domain],
)->run_todo_test;
TEST
    my $dir = "$Bin/gen/content-like-TODO";
    make_path($dir);
    open my $th, ">", "$dir/$domain.t";
    print $th $test;
    close $th;
}

}
